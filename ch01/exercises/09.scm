#|
Exercise 1.9: Each of the following two procedures defines
a method for adding two positive integers in terms of the
procedures inc, which increments its argument by 1, and
dec, which decrements its argument by 1.

(define (+ a b)
  (if (= a 0) b (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0) b (+ (dec a) (inc b))))

Using the substitution model, illustrate the process gener-
ated by each procedure in evaluating (+ 4 5). Are these
processes iterative or recursive?
|#

#|
The first procedure:
1. (if (= 4 0) 5 (inc (+ (dec 4) 5)))
    * Since (= 4 0) is false, evaluate the else branch.
2. (inc (+ 3 5))
    * The inc operation is deferred, meaning it waits for the result of (+ 3 5).
3. (inc (inc (+ (dec 3) 5)))
    * inc is deferred again.
4. (inc (inc (+ 2 5)))
5. (inc (inc (inc (+ (dec 2) 5))))
    * inc is deferred again.
6. (inc (inc (inc (+ 1 5))))
7. (inc (inc (inc (inc (+ (dec 1) 5)))))
    * inc is deferred again.
8. (inc (inc (inc (inc (+ 0 5)))))
    * Now, a is 0.
9. (inc (inc (inc (inc 5))))
    * The innermost if condition (= 0 0) is true, so it returns b, which is 5.
      The chain of deferred inc operations now begins to evaluate.
10. (inc (inc (inc 6)))
11. (inc (inc 7))
12. (inc 8)
13. 9
The process generated by this procedure is a linear recursive process.
|#

#|
The second procedure:
1. (if (= 4 0) 5 (+ (dec 4) (inc 5)))
    * Since (= 4 0) is false, evaluate the else branch.
2. ( + 3 6)
    * dec 4 becomes 3, inc 5 becomes 6. The original a and b values are transformed for the next call.
3. (if (= 3 0) 6 (+ (dec 3) (inc 6)))
    * Since (= 3 0) is false, evaluate the else branch.
4. ( + 2 7)
5. (if (= 2 0) 7 (+ (dec 2) (inc 7)))
    * Since (= 2 0) is false, evaluate the else branch.
6. ( + 1 8)
7. (if (= 1 0) 8 (+ (dec 1) (inc 8)))
    * Since (= 1 0) is false, evaluate the else branch.
8. ( + 0 9)
9. (if (= 0 0) 9 (+ (dec 0) (inc 9)))
    * The if condition (= 0 0) is true, so it returns b, which is 9.
10. 9
The process generated by this procedure is a linear iterative process.
|#
